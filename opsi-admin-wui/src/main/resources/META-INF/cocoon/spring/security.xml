<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:security="http://www.springframework.org/schema/security"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

  <security:http auto-config="true"
  	access-decision-manager-ref="accessDecisionManager"
  	servlet-api-provision="true">
<!--
    <security:intercept-url pattern="/login.jsp" filters="none" />
-->
<!--
    <security:intercept-url pattern="/js/**" filters="none" />
    <security:intercept-url pattern="/css/**" filters="none" />
    <security:intercept-url pattern="/images/**" filters="none" />
    <security:intercept-url pattern="/wallpapers/**" filters="none" />
    <security:intercept-url pattern="/viewer/desktop.css" filters="none" />
    <security:intercept-url pattern="/applications/**" filters="none" />
    <security:intercept-url pattern="/services/httpRemoteAuthenticationManager" filters="none" />
    <security:intercept-url pattern="/remote/**" access="ROLE_USER" />
-->
    <security:intercept-url pattern="/login.jsp" filters="none" />
    <security:intercept-url pattern="/images/**" filters="none" />
    <security:intercept-url pattern="/gxt/**" filters="none" />
    <security:intercept-url pattern="/cz.muni.ucn.opsi.wui.gwtLogin.LoginApp/**" filters="none" />
    <security:intercept-url pattern="/remote/loginStatus" filters="none" />
    <security:intercept-url pattern="/**" access="ROLE_USER" />
<!--     <security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ANONYMOUS" /> -->
<!--    <security:form-login login-page="/login.do" default-target-url="/" authentication-failure-url="/login.do?login_error"/>-->
    <security:form-login login-page="/login.jsp"
    	authentication-failure-handler-ref="authenticationHandler"
    	authentication-success-handler-ref="authenticationHandler"/>
    <security:anonymous  />
    <security:http-basic />
    <security:logout success-handler-ref="authenticationHandler" />
<!--    <security:remember-me key="eshop-wui" user-service-ref="apsiUserService"/>-->
  </security:http>

	<bean id="authenticationHandler" class="cz.muni.ucn.opsi.wui.remote.authentication.AuthenticationHandler"/>

  <security:global-method-security secured-annotations="enabled" jsr250-annotations="enabled"
  	access-decision-manager-ref="accessDecisionManager"/>

  <security:authentication-manager alias="authenticationManager">
  	<security:authentication-provider ref="daoAuthenticationProvider"/>
  	<security:authentication-provider ref="ldapAuthProvider"/>
  </security:authentication-manager>

  <bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
	<property name="allowIfAllAbstainDecisions" value="true" />
	<property name="decisionVoters">
		<list>
			<ref bean="roleVoter" />
			<ref bean="groupVoter" />
			<ref bean="authenticatedVoter" />
			<ref bean="jsr250Voter" />
		</list>
	</property>
  </bean>

  <bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter"/>
  <bean id="groupVoter" class="org.springframework.security.access.vote.RoleVoter">
  	<property name="rolePrefix" value="GROUP_"/>
  </bean>
  <bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter"/>
  <bean id="jsr250Voter" class="org.springframework.security.access.annotation.Jsr250Voter"/>

  <bean id="daoAuthenticationProvider"
	   class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <property name="userDetailsService" ref="inMemoryDaoImpl"/>
  </bean>

  <bean id="inMemoryDaoImpl" class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
  	<property name="userMap">
		<value>
  			autor=autor,ROLE_USER,ROLE_ADMIN,ROLE_AUTHOR
 		</value>
  	</property>
  </bean>

<!--  <bean id="loggerListener" class="org.springframework.security.event.authentication.LoggerListener" />-->

  <!-- Allows remote clients to check if a username/password is valid -->
<!--
  <bean id="remoteAuthenticationManager"
      class="org.springframework.security.providers.rcp.RemoteAuthenticationManagerImpl">
    <property name="authenticationManager" ref="authenticationManager" />
  </bean>
-->

<!--
	<security:ldap-server url="${ldap.server}" id="ldapServer">
	</security:ldap-server>
    <security:ldap-authentication-provider user-search-filter="(uid={0})"
          user-search-base="ou=people"/>
 -->

	<bean id="contextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="${ldap.server}" />
		<property name="userDn" value="${ldap.bindDn}" />
		<property name="password" value="${ldap.bindPassword}" />
	</bean>

	<bean id="ldapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
		<constructor-arg value="${ldap.searchBase}"/>
		<constructor-arg value="${ldap.searchFilter}"/>
		<constructor-arg ref="contextSource"/>
	</bean>

	<bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<constructor-arg>
			<bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<constructor-arg ref="contextSource" />
				<property name="userDnPatterns">
					<list>
<!--						<value>uid={0},ou=people</value>-->
						<value>CN={0},OU=Users</value>
						<value>CN={0},OU=System</value>
						<value>CN={0},CN=System</value>
					</list>
				</property>
				<property name="userSearch" ref="ldapUserSearch"/>
			</bean>
		</constructor-arg>
		<constructor-arg>
			<bean class="org.springframework.security.ldap.authentication.UserDetailsServiceLdapAuthoritiesPopulator">
				<constructor-arg ref="ldapUserDetailsService"/>
			</bean>
		</constructor-arg>
		<property name="userDetailsContextMapper">
			<bean class="org.springframework.security.ldap.userdetails.InetOrgPersonContextMapper"/>
		</property>
	</bean>

	<bean id="ldapUserDetailsService" class="org.springframework.security.ldap.userdetails.LdapUserDetailsService">
		<constructor-arg ref="ldapUserSearch"/>
		<constructor-arg>
			<bean class="cz.muni.ucn.opsi.wui.security.OpsiLdapAuthoritiesPopulator">
				<constructor-arg ref="contextSource" />
				<constructor-arg value="${ldap.group.searchBase}" />
				<property name="groupRoleAttribute" value="cn" />
				<property name="convertToUpperCase" value="true"/>
				<property name="groupSearchFilter" value="${ldap.group.searchFilter}"/>
				<property name="rolePrefix" value="GROUP_"/>
				<property name="searchSubtree" value="true"/>
				<property name="adminGroup" value="${ldap.group.admin}"/>
				<property name="userGroup" value="${ldap.group.user}"/>
			</bean>
		</constructor-arg>
	</bean>

</beans>
